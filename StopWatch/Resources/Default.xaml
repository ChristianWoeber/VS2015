<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:StopWatchUI.Resources">

    <Style  x:Key="LblTimeStyle" TargetType="Label">
        <Setter Property="FontSize" Value="{StaticResource LblFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource Default Font}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTurQuoise }"/>
        <Setter Property="Background" Value="{StaticResource ThemeBackground1}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>


    <Style  x:Key="mnuStyle" TargetType="Menu">
        <Setter Property="FontSize" Value="{StaticResource MenuFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource Default Font}"/>
        <!--<Setter Property="Foreground" Value="{StaticResource ThemeTurQuoise }"/>
        <Setter Property="Background" Value="{StaticResource ThemeBackground1}"/>-->
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="{x:Type MenuItem}" TargetType="MenuItem">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style  x:Key="mnuItemStyle" TargetType="{x:Type MenuItem}">
        <Setter Property="FontSize" Value="{StaticResource MenuFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource Default Font}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeBackground1   }"/>
        <!--<Setter Property="Background" Value="{StaticResource ThemeBackground1}"/>-->
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border BorderBrush="{StaticResource ThemeBackground1}" BorderThickness="2">
                        <Grid Background="{StaticResource ThemeTurQuoise}">
                            <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource ThemeTurQuoise}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->

    </Style>
    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="MenuItem">
        <Border Name="Border" Background="{StaticResource ThemeTurQuoise}" >
            <Grid>
                <ContentPresenter 
        Margin="6,3,6,3" 
        ContentSource="Header"
        RecognizesAccessKey="True" />
                <Popup 
        Name="Popup"
        Placement="Bottom"
        IsOpen="{TemplateBinding IsSubmenuOpen}"
        AllowsTransparency="True" 
        Focusable="False"
        PopupAnimation="Fade">
                    <Border 
          Name="SubmenuBorder"
          SnapsToDevicePixels="True"
          
          BorderBrush="{StaticResource ThemeTurQuoise}"
          BorderThickness="2" >
                        <StackPanel  
            IsItemsHost="True" 
            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
        TargetType="{x:Type MenuItem}">
        <Border Name="Border" BorderBrush="{StaticResource ThemeTurQuoise}" Background="{StaticResource ThemeBackground1}">
            <Grid>
                <ContentPresenter 
            Margin="6,3,6,3"                   
            ContentSource="Header"
            RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!--<Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="White"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
            </Trigger>-->
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
        TargetType="{x:Type MenuItem}">
        <Border Name="Border" Background="{StaticResource ThemeBackground1}" BorderBrush="{StaticResource ThemeTurQuoise}">
            <!--BorderBrush="{StaticResource ThemeTurQuoise}"-->
            <!--BorderThickness="2">-->
            <Grid>
                <ContentPresenter
            Margin="6,2,6,2" 
            ContentSource="Header"   />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="Gray"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <Style x:Key="ListViewItemStyle" TargetType="ListView">
        <Setter Property="FontSize" Value="{StaticResource  ContentFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource Default Font}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTurQuoise }"/>
        <Setter Property="Background" Value="{StaticResource ThemeBackground1}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <WrapPanel>
                        <TextBlock Text="{Binding Id}"/>
                        <TextBlock Text="."/>
                        <TextBlock Text="{Binding RoundTime, StringFormat=mm\\:ss\\.ff}" />
                        <Button Name="bttnSave" Content="Save" Click="bttnSave_Click"/>
                        <!--<TextBlock Text="{Binding TimeStamp}"/>-->
                    </WrapPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ButtonColon" TargetType="Button">
        <Setter Property="Content" Value="&#11825;"/>
        <Setter Property="FontSize" Value="{StaticResource ButtonFontSize}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTurQuoise }"/>
        <Setter Property="Background" Value="{StaticResource ThemeBackground1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonIncrement" TargetType="Button">
        <Setter Property="Content" Value="&#9651;"/>
        <Setter Property="FontSize" Value="{StaticResource ButtonFontSize}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTurQuoise }"/>
        <Setter Property="Background" Value="{StaticResource ThemeBackground1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonDecrement" TargetType="Button">
        <Setter Property="Content" Value="&#9661;"/>
        <Setter Property="FontSize" Value="{StaticResource ButtonFontSize}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTurQuoise }"/>
        <Setter Property="Background" Value="{StaticResource ThemeBackground1}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TextBoxTimerOutput" TargetType="TextBox">
        <Setter Property="FontSize" Value="{StaticResource LblFontSize}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTurQuoise }"/>
        <Setter Property="Background" Value="{StaticResource ThemeBackground1}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ThemeBackground2}"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>
    <Style x:Key="ListViewHeaderStyle" TargetType="ListViewItem">
        <Setter Property="FontSize" Value="{StaticResource  LstViewHeaderSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource Default Font}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeBackground1 }"/>
        <Setter Property="Background" Value="{StaticResource ThemeTurQuoise}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="TextBox">
        <Setter Property="FontSize" Value="{StaticResource  ContentFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource Default Font}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeBackground1 }"/>
        <Setter Property="Background" Value="{StaticResource ThemeTurQuoise}"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
    </Style>
    <Style x:Key="ToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="FontSize" Value="{StaticResource ButtonFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource Default Font}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTurQuoise }"/>
        <Setter Property="Background" Value="{StaticResource ThemeBackground1}"/>
        <!--<Setter Property="Height" Value="100"/>
        <Setter Property="Width" Value="100"/>-->
        <!--<Setter Property="IsThreeState" Value="True"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Ellipse Stroke="LightGray" Fill="{StaticResource ThemeBackground2}" StrokeThickness="0" Height="90" Width="90">
                            <!--Ellipse.Fill>
                                <SolidColorBrush Color="Transparent"/>
                            </Ellipse.Fill>-->
                        </Ellipse>
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center">
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--<Trigger Property="IsChecked" Value="{x:Null}">
            <Setter Property="Content" Value="Stop"/>               
            </Trigger>-->
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content" Value="Start"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="Pause"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ToggleButtonStylePause" TargetType="ToggleButton">
        <Setter Property="FontSize" Value="{StaticResource ButtonFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource Default Font}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTurQuoise }"/>
        <Setter Property="Background" Value="{StaticResource ThemeBackground1}"/>
        <!--<Setter Property="Height" Value="100"/>
        <Setter Property="Width" Value="100"/>-->
        <!--<Setter Property="IsThreeState" Value="True"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Ellipse Stroke="LightGray" Fill="{StaticResource ThemeBackground2}"  StrokeThickness="0" Height="90" Width="90">
                            <!--<Ellipse.Fill>
                                <SolidColorBrush Color="{StaticResource }"/>
                            </Ellipse.Fill>-->
                        </Ellipse>
                        <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center">
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--<Trigger Property="IsChecked" Value="{x:Null}">
            <Setter Property="Content" Value="Stop"/>               
            </Trigger>-->
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content" Value="Stop"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="Stop"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToggleButtonShowStyle" TargetType="ToggleButton">
        <Setter Property="FontSize" Value="{StaticResource ButtonShowFontSize}"/>
        <Setter Property="FontFamily" Value="{StaticResource Default Font}"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeTurQuoise }"/>
        <Setter Property="Background" Value="{StaticResource ThemeBackground1}"/>

        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <!--<Setter Property="Height" Value="100"/>
        <Setter Property="Width" Value="100"/>-->
        <!--<Setter Property="IsThreeState" Value="True"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Name="gridContent">
                        <Rectangle Stroke="LightGray" Fill="{StaticResource ThemeBackground2}" StrokeThickness="0" Height="{Binding ElementName=gridContent, Path=ActualHeight}" 
                                   Width="{Binding ElementName=gridContent, Path=ActualWidth}"
                                   SnapsToDevicePixels="True">
                            <!--<Rectangle.Fill>
                                <SolidColorBrush Color="Transparent"/>
                            </Rectangle.Fill>-->
                        </Rectangle>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!--<Trigger Property="IsChecked" Value="{x:Null}">
            <Setter Property="Content" Value="Stop"/>               
            </Trigger>-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="&#9195;"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Content" Value="&#9196;"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>